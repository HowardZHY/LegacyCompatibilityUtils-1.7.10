plugins {
    id 'java'
    id 'xyz.wagyourtail.unimined' version '1.4.1-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version "8.1.1"
}

group 'space.libs'
version '1.7.10'

base {
    archivesName = 'compatlib'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven {
        name = "Forge"
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        name = "GTNH Maven"
        url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        allowInsecureProtocol = true
    }
    maven {
        name = "Sponge"
        url 'https://repo.spongepowered.org/maven'
    }
    maven {
        name = "CurseMaven"
        url "https://cursemaven.com"
    }
}

configurations {
    shade
    implementation.extendsFrom shade
    modCompileOnly
    compileOnly.extendsFrom modCompileOnly
}

unimined.minecraft {
    version "1.7.10"

    minecraftForge {
        loader "10.13.4.1614-1.7.10"
        accessTransformer file("src/main/resources/compatlib_at.cfg")
        mixinConfig("mixins.compatlib.json")
        mixinConfig("mixins.compatlib.forge.json")
    }

    minecraftRemapper.config {
        ignoreConflicts(true)
    }

    mappings {
        searge()
        mcp("stable", "12-1.7.10")
    }

    remap(tasks.shadowJar) {
        prodNamespace("searge")
        mixinRemap {}
    }

    mods {
        remap(configurations.modCompileOnly) {}
        modImplementation {
            catchAWNamespaceAssertion()
        }
    }
}

def mixinProviderSpecNoClassifer = "io.github.legacymoddingmc:unimixins:0.1.16"
def mixinProviderSpec = "${mixinProviderSpecNoClassifer}:dev"

dependencies {
    implementation(mixinProviderSpec)
    shade("org.joml:joml:1.10.5")
    compileOnly("org.ow2.asm:asm-commons:9.6")
    compileOnly("curse.maven:ichunutil-229060:2338149-deobf")
    modCompileOnly("curse.maven:advent-of-ascension-nevermine-311054:2973536")
    modCompileOnly("curse.maven:mob-dismemberment-229067:2232121")
}

processResources {}

jar {
    manifest {
        attributes([
            "FMLCorePlugin": "space.libs.core.CompatLibCore",
            "FMLCorePluginContainsFMLMod": "true",
            "ForceLoadAsMod": "true",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": "mixins.compatlib.json",
            "Manifest-Version": 1.0
        ])
    }
}

shadowJar {
    destinationDirectory = temporaryDir
    configurations = [project.configurations.shade]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    exclude("META-INF/maven/**")
    exclude("META-INF/versions/**")
}

jar.dependsOn("shadowJar")

tasks.jar {
//    enabled = false
}

tasks.shadowJar {}

tasks.build {
    dependsOn(tasks.remapShadowJar)
}
